Read Me

This library was created to fascilitate quickly building web pages, though it
also includes tools for working with parsed xml
* Code Generation with esxml.el
  This library provides to formats for xml code generation.  The primary form is
  esxml.  esxml is the form that is returned by such functions as
  libxml-parse-xml-region and is used internally by emacs in many xml related
  libraries.

** A brief example
  The following is a very simple esxml document, paths are handled directly, via
  a case statement.  While this is not good practice, this is meant to be a very
  simple example.

*** sxml example
#+BEGIN_SRC elisp
    (let ((count 0))
      (defun sxml-demo (httpcon)
        (incf count)
        (case (intern (elnode-http-pathinfo httpcon))
          (/messages (with-current-buffer "*Messages*"
                       (sxml-to-xml `(html (body (pre ,(buffer-string)))))))
    
          (t (sxml-to-xml
              `(html (body
                      (h1 "Hello from Emacs!") (br)
                      "Trying to visit " ,(format "%s" (elnode-http-pathinfo httpcon)) (br)
                      "Have been visited " ,(format "%s" count) " times since last started.")))))))
#+END_SRC

  This outputs the following HTML:

#+BEGIN_SRC html
<html>
<body>
<h1>Hello from Emacs!</h1>
<br/>
Trying to visit /somepath<br/>
Have been visited 10 times since last started.
</body>
</html>
#+END_SRC


*** esxml example
#+BEGIN_SRC elisp
  (let ((count 0))
    (defun esxml-demo (httpcon)
      (incf count)
      (case (intern (elnode-http-pathinfo httpcon))
        (/messages (with-current-buffer "*Messages*"
                     (esxml-to-xml `(html () (body () (pre () ,(buffer-string)))))))
        
        (t (esxml-to-xml
            `(html ()
                 (body ()
                       (h1 () "Hello from Emacs!")
                       (br) "Trying to visit " ,(format "%s" (elnode-http-pathinfo httpcon))
                       (br) "Have been visited " ,(format "%s" count) " times since last started.")))))))
#+END_SRC

** Advanced examples to appear in this location

* Extracting Data from XML
  TODO
